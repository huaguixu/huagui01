#include<iostream>
#include<string>
#include<fstream>
#include<cstdlib>

using namespace std;
#define MAX 1000
void showmenu() {

	cout << "1.添加联系人" << endl;
	cout << "2.显示联系人" << endl;
	cout << "3.删除联系人" << endl;
	cout << "4.查找联系人" << endl;
	cout << "5.修改联系人" << endl;
	cout << "6.清空联系人" << endl;
	cout << "0.退出通讯录" << endl;
}
struct person {
	string m_name;
	int m_sex;
	int m_age;
	string m_phone;
	string m_address;
};
struct addressbook {
	struct person parr[MAX];
	int m_size;
};
void addperson(addressbook* abs) {
	ofstream ofs;
	ofs.open("person.txt", ios::out);
	if (abs->m_size > MAX) {
		cout << "通讯录已满，无法添加！\t";
	}
	else {
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		abs->parr[abs->m_size].m_name = name;
		ofs << name << " ";
		cout << "请输入性别：" << endl;
		cout << "1---男" << endl;
		cout << "2---女" << endl;


		while (true) {
			int sex = 0;
			cin >> sex;
			if (sex == 1 || sex == 2) {
				abs->parr[abs->m_size].m_sex = sex;
				ofs << sex << " ";
				break;
			}
			cout << "输入错误，请重新输入！" << endl;
		}

		cout << "请输入年龄：" << endl;
		while (true) {
			int age = 0;
			cin >> age;
			if (age > 0 && age < 150) {
				abs->parr[abs->m_size].m_age = age;
				ofs << age << " ";
				break;
			}
			cout << "输入错误，请重新输入！" << endl;
		}
		cout << "请输入联系电话：" << endl;
		string phone;
		cin >> phone;
		abs->parr[abs->m_size].m_phone = phone;
		ofs << phone << " ";
		cout << "请输入联系人地址：" << endl;
		string address;
		cin >> address;
		abs->parr[abs->m_size].m_address = address;
		ofs << name << " " << endl;
		abs->m_size++;
		cout << "添加成功" << endl;
		ofs << abs->m_size << endl;
		ofs.close();
	}
	system("pause");
	system("cls");
}
void showperson(addressbook* abs) {
	if (abs->m_size == 0) {
		cout << "当前记录为空" << endl;
	}
	else {
		for (int i = 0; i < abs->m_size; i++) {
			cout << "姓名：   " << abs->parr[i].m_name << "性别：   " << (abs->parr[i].m_sex == 1 ? "男" : "女") << "年龄：   " << abs->parr[i].m_age
				<< "号码：   " << abs->parr[i].m_phone << "住址：   " << abs->parr[i].m_address << "\t" << endl;
		}

	}
	system("pause");
	system("cls");
}
int isexist(addressbook* abs, string name) {
	for (int i = 0; i < abs->m_size; i++) {
		if (abs->parr[i].m_name == name) {
			return i;
		}
	}
	return -1;
}
void deleteperson(addressbook* abs) {
	cout << "请输入您要删除的联系人" << endl;
	string name;
	cin >> name;
	int a = isexist(abs, name);
	if (a == -1) {
		cout << "查无此人！" << endl;
	}
	else {
		for (int i = a; i < abs->m_size; i++) {
			abs->parr[i] = abs->parr[i + 1];
		}
		abs->m_size--;
		cout << "删除成功" << endl;
	}
	ofstream ofs;
	ofs.open("person.txt", ios::trunc|ios::out);
	for (int b = 0;b < abs->m_size; b++) {
		ofs<<abs->parr[b].m_name << " " << abs->parr[b].m_sex<<" " 
			<< " " << abs->parr[b].m_age
			<< " " << abs->parr[b].m_phone <<endl;
	}
	ofs.close();
	system("pause");
	system("cls");
}
void findperson(addressbook* abs) {
	cout << "请输入您要查找的联系人" << endl;
	string name;
	cin >> name;
	int b = isexist(abs, name);
	if (b == -1) {
		cout << "查无此人！" << endl;
	}
	else {
		cout << "姓名：   " << abs->parr[b].m_name << "性别：   " << (abs->parr[b].m_sex == 1 ? "男" : "女")
			<< "年龄：   " << abs->parr[b].m_age
			<< "号码：   " << abs->parr[b].m_phone << "住址：   " << abs->parr[b].m_address << "\t" << endl;
	}
	system("pause");
	system("cls");
}
void modifyperson(addressbook* abs) {
	cout << "请输入您要修改的联系人" << endl;
	string name;
	cin >> name;
	int b = isexist(abs, name);
	if (b == -1) {
		cout << "查无此人！" << endl;
	}
	else {
		string name;
		cout << "请输入姓名" << endl;
		cin >> name;
		abs->parr[b].m_name = name;
		cout << "请输入性别：" << endl;
		cout << "1---男" << endl;
		cout << "2---女" << endl;

		while (true) {
			int sex = 0;
			cin >> sex;
			if (sex == 1 || sex == 2) {
				abs->parr[b].m_sex = sex;
				break;
			}
			cout << "输入错误，请重新输入！" << endl;
		}
		cout << "请输入年龄：" << endl;
		while (true) {
			int age = 0;
			cin >> age;
			if (age > 0 && age < 150) {
				abs->parr[b].m_age = age;
				break;
			}
			cout << "输入错误，请重新输入！" << endl;
		}
		cout << "请输入联系电话：" << endl;
		string phone;
		cin >> phone;
		abs->parr[b].m_phone = phone;
		cout << "请输入联系人地址：" << endl;
		string address;
		cin >> address;
		abs->parr[b].m_address = address;
		cout << "修改成功" << endl;
	}
	system("pause");
	system("cls");
}
void cleanperson(addressbook* abs) {
	int a = 0;
	cout << "您要选择清空联系人吗" << endl;
	cout << "1---清空" << endl;
	cout << "其他数字--放弃清空" << endl;
	cin >> a;
	if (a == 1) {
		abs->m_size = 0;
		fstream ofs;
		ofs.open("person.txt", ios::trunc);
		ofs.close();
		cout << "通讯录已清空" << endl;
	}
	else {
		cout << "您已放弃清空" << endl;
	}
	system("pause");
	system("cls");
}
int main() {
	addressbook abs;
	abs.m_size = 0;
	int select = 0;
	while (true) {
		showmenu();
		cin >> select;
		switch (select) {
		case 1:
			addperson(&abs);
			break;
		case 2:
			showperson(&abs);
			break;
		case 3:
			deleteperson(&abs);
			break;
		case 4:
			findperson(&abs);
			break;
		case 5:
			modifyperson(&abs);
			break;
		case 6:
			cleanperson(&abs);
			break;
		case 0:
			cout << "欢迎下次使用" << endl;
			system("pause");
			return 0;
		default:
			break;
		}
	}
	system("pause");
	return 0;
}