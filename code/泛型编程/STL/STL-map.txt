//map容器
//key键值 value实值
//map不允许重复的key值 multimap可以有重复的key值 value 可重复
#include<iostream>
#include<map>
#include<algorithm>
using namespace std;
void print(map<int, int>& m) {
	for (map<int, int>::iterator it = m.begin(); it != m.end(); it++) {
		cout<<"key="<<it->first<<"value=" << it->second << endl;
	}
}
void test01() {
	//map构造
	map<int, int>m1,m3;
	//插值(按对组pair排序)
	m1.insert(pair<int, int>(1, 10));//前key 后 value;
	m1.insert(make_pair(5, 20));//第二种方法插入
	m1.insert(map<int,int>::value_type(3, 30));//第三种
	m1[4] = 40;//第四种 容易混乱 不推荐
	//按key 排序
	print(m1);
	//拷贝构造
	map<int, int>m2(m1);
	//等号赋值
	m3 = m1;
	//删除
	m1.erase(3);//删除 key值为3的数据
}
int main() {
	test01();
	system("pause");
	return 0;
}
//大小判断 空判断 交换与vector类似
//除按键值删除外 删除 清空方式与set 类似
//查找和统计与set类似 按key值查找统计
//排序与set 类似 使用仿函数